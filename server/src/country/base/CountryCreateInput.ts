/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CityCreateNestedManyWithoutCountriesInput } from "./CityCreateNestedManyWithoutCountriesInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsInt,
  IsBoolean,
} from "class-validator";
import { Type } from "class-transformer";
import { StateCreateNestedManyWithoutCountriesInput } from "./StateCreateNestedManyWithoutCountriesInput";
import { UserCreateNestedManyWithoutCountriesInput } from "./UserCreateNestedManyWithoutCountriesInput";
@InputType()
class CountryCreateInput {
  @ApiProperty({
    required: false,
    type: () => CityCreateNestedManyWithoutCountriesInput,
  })
  @ValidateNested()
  @Type(() => CityCreateNestedManyWithoutCountriesInput)
  @IsOptional()
  @Field(() => CityCreateNestedManyWithoutCountriesInput, {
    nullable: true,
  })
  cities?: CityCreateNestedManyWithoutCountriesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  createdBy?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  currencyCode?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneCallingCode?: string | null;

  @ApiProperty({
    required: false,
    type: () => StateCreateNestedManyWithoutCountriesInput,
  })
  @ValidateNested()
  @Type(() => StateCreateNestedManyWithoutCountriesInput)
  @IsOptional()
  @Field(() => StateCreateNestedManyWithoutCountriesInput, {
    nullable: true,
  })
  states?: StateCreateNestedManyWithoutCountriesInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  updatedBy?: number | null;

  @ApiProperty({
    required: false,
    type: () => UserCreateNestedManyWithoutCountriesInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutCountriesInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutCountriesInput, {
    nullable: true,
  })
  users?: UserCreateNestedManyWithoutCountriesInput;
}
export { CountryCreateInput };
